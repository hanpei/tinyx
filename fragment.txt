// if stmt
let a =11
let b = 3
if (a-b<0) {
    // print "a < b"
    a
} else if(a - b >0) {
    //print "a > b"
    b
} else {
    print a
}


// while stmt
let a = 1
while (a<10) {
    print a
    a = a + 1
}


// while loop do not break after return value
fn count(n) {
  while (n < 10) {
    if (n == 3) return n; // <--
    print n;
    n = n + 1;
  }
}

count(1);


// closure
fn makeCounter() {
  let i = 0;
  fn count() {
    i = i + 1;
    print i;
  }
  return count;
}

let counter = makeCounter();
counter(); // "1".
counter(); // "2".


// bug: recursion
fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}
